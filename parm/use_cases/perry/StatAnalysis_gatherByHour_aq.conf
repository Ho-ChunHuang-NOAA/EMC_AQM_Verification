[dir]
# Full path to .stat files, can use wildcards if in multiple directories
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/{MODEL}

# Location of configuration files used by MET applications
#CONFIG_DIR = /gpfs/dell2/emc/verification/save/Logan.Dawson/CAM_verif/parm/use_cases/METplus-3.0/grid2grid_mrms/met_config
# CONFIG_DIR = /gpfs/dell2/emc/verification/save/Perry.Shafran/METplus-3.0/parm/met_config
CONFIG_DIR = /gpfs/dell2/emc/verification/save/(USER_TO_USE)/METplus-4.0.0/parm/met_config

MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/cam/stat/{MODEL}/*{VALID_BEG}*


[config]
METPLUS_CONF = {OUTPUT_BASE}/conf/{MODEL}/metplus_final_statanalysis_gatherbydate.conf

LOG_METPLUS = {LOG_DIR}/{MODEL}/{VALID_BEG}/master_metplus.statanalysis.log.{LOG_TIMESTAMP_TEMPLATE}

# List of applications to run
# times will loop through dates
LOOP_ORDER = times
PROCESS_LIST = StatAnalysis
LOG_MET_VERBOSITY = 4

LOOP_BY = VALID
VALID_TIME_FMT = %Y%m%d
# Start time for METplus run
#VALID_BEG = 20200408
# End time for METplus run
#VALID_END = 20200408
# Increment between METplus runs in seconds. Must be >= 60
VALID_INCREMENT = 86400
#VALID_INCREMENT = 1H

# Further specifications for valid and init hours
# must be set, regardlesss of LOOP_BY agrument
# ""_HOUR(BEG)(END) = HHMM, two digit hour two digit minute
# ""_HOUR_INCREMENT = numeric value in seconds, must be >= 60
# ""_HOUR_METHOD = "GROUP" or "LOOP"
#    GROUP = look at times as a group
#    LOOP  = loop over individial times
# Filter by valid hour(s)
MODEL_LIST = {MODEL1}
FCST_VALID_HOUR_LIST = 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
##FCST_VALID_HOUR_LIST = {valid?fmt=%2H}
#FCST_VALID_HOUR_LIST = 00
GROUP_LIST_ITEMS =
LOOP_LIST_ITEMS = FCST_VALID_HOUR_LIST


#VALID_HOUR_METHOD = LOOP
#VALID_HOUR_BEG = 0100
#VALID_HOUR_END = 0000
#VALID_HOUR_INCREMENT = 3600
# Filter by initialization
#INIT_HOUR_METHOD = GROUP
#INIT_HOUR_BEG = 0000
#INIT_HOUR_END = 2300
#INIT_HOUR_INCREMENT = 3600

OBTYPE = ONLYSF
#MODEL = nam
MODEL = nam
MODEL1 = nam
MODEL1_OBTYPE = ONLYSF

STAT_ANALYSIS_CONFIG_FILE = {CONFIG_DIR}/STATAnalysisConfig

# stat_analysis job info
STAT_ANALYSIS_JOB_NAME = filter
# if using -dump_row, put in JOBS_ARGS "-dump_row [dump_row_filename]"
# if using -out_stat, put in JOBS_ARGS "-out_stat [out_stat_filename]"
# METplus will fill in filename
STAT_ANALYSIS_JOB_ARGS = -dump_row [dump_row_filename]

# Optional variables for further filtering
# if more than one use comma separated list
#MODEL_LIST = {MODEL_NAME}
#DESC = 
#FCST_LEAD =
#FCST_VAR_NAME =
#FCST_VAR_LEVEL =
#OBS_VAR_NAME =
#OBS_VAR_LEVEL =
#REGION =
#INTERP =
#INTERP_PTS =
#FCST_THRESH =
#COV_THRESH =
#LINE_TYPE =

[filename_templates]
# Optional settings to create templated directory and file name information 
# to save files as stat_analysis out as, this is appended to STAT_ANALYSIS_OUTPUT_DIR
# if no template is provided a default filename set in the code will be used
# this can be tricky to set up but can be very useful
# for example, it doesn't make sense to use {init?fmt=%Y%m%d} if 
# LOOP_BY = VALID, but if INIT_HOUR_METHOD = LOOP
# {init?fmt=%H} makes sense!
# aceepted key options: valid, init 
# if wanting to include information when (VALID)(INIT)_HOUR_METHOD = GROUP
# put this information directly in the template, ex. {INIT_HOUR_END}
# additional conf items can be specided in the template as well
#STAT_ANALYSIS_DUMP_ROW_TMPL = {valid?fmt=%H}Z/{MODEL_NAME}/{MODEL_NAME}_{valid?fmt=%Y%m%d}.stat
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid?fmt=%Y%m%d}/{MODEL1}_{valid_beg?fmt=%Y%m%d%H}.stat
STAT_ANALYSIS_OUT_STAT_TEMPLATE =
