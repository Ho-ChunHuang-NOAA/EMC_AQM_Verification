[dir]

# this is the name of model (and subdir to PREPBUFR_DATA_DIR)
# example nam for NAM or gdas for GDAS dir
PREPBUFR_MODEL_DIR_NAME =

PB2NC_OUTPUT_DIR = {OUTPUT_BASE}/{PREPBUFR_MODEL_DIR_NAME}/aqm/conus_sfc

## Used with OUTPUT_BASE to create the output directory from PB2NC                                            
PREPBUFR_DATA_DIR = /com/hourly/prod/

[config]

## OVERWRITE OPTIONS                                                                                               
## Don't overwrite files if they already exist.
## Set to no if you do NOT want to override existing files
## Set to yes if you do want to override existing files
OVERWRITE_NC_OUTPUT = yes

# MET configuration file
PB2NC_CONFIG_FILE = {PARM_BASE}/met_config/PB2NCConfig_aqm

INTERVAL_TIME = 1

# Either conus_sfc or upper_air                                                                                   
VERTICAL_LOCATION = conus_sfc

# These are appended with PB2NC to differentiate the GRID, POLY, and MESSAGE_TYPE for point_stat.                
PB2NC_GRID = G212
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE =

# Leave empty to process all                                                                                      
OBS_BUFR_VAR_LIST = PMO, TOB, TDO, UOB, VOB, PWO, TOCC, D_RH
OBS_BUFR_VAR= COPO

[filename_templates]

# For NAM                                            
#NC_FILE_TMPL = prepbufr.nam.{init?fmt=%Y%m%d}.t{cycle?fmt=%HH}z.tm{offset?fmt=%HH}.nc
#NC_FILE_TMPL = prepbufr.nam.{valid?fmt=%Y%m%d%H}.nc
NC_FILE_TMPL = prepbufr.aqm.{valid?fmt=%Y%m%d%H}.nc

[regex_pattern]

## Define prepBUFR input directory and filename patterns, place parenthesis  
## around any YMD, cycle time, and offset (fhr)                                            
#PREPBUFR_DIR_REGEX = prod/.*nam.(2[0-9]{7})
#PREPBUFR_DIR_REGEX = .*prod/nam.(2[0-9]{7})
PREPBUFR_DIR_REGEX = .*hourly.([0-9]{8})
#PREPBUFR_FILE_REGEX = .*nam.t([0-9]{2})z.prepbufr.tm([0-9]{2})
#PREPBUFR_FILE_REGEX = .*nam.t([0-9]{2})z.prepbufr.tm([0-9]{1})([1-9]{1})$
#PREPBUFR_FILE_REGEX = .*aqm.t([0-9]{2})z.prepbufr.tm([0-9]{2})
PREPBUFR_FILE_REGEX = .*aqm.t12z.prepbufr.tm00
