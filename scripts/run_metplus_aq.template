#!/bin/bash
#PBS -N xxJOB
#PBS -o xxOUTLOG
#PBS -e xxERRLOG
#PBS -q dev
#PBS -A AQM-DEV
#PBS -l place=shared,select=1:ncpus=1:mem=4500MB
#PBS -l walltime=04:00:00
#PBS -l debug=true
# 

module purge
export HPC_OPT=/apps/ops/prod/libs
module use /apps/ops/prod/libs/modulefiles/compiler/intel/19.1.3.304/
module load intel
module load gsl
module load python/3.8.6
module load netcdf/4.7.4
module load met/10.1.2
module load metplus/4.1.4
## export MET_BASE=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2/share/met
## export MET_ROOT=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2
## export PATH=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2/bin:${PATH}

module load prod_util/2.0.13
module load prod_envir/2.0.6

envir=xxENVIR
envir1=`echo ${envir} | tr a-z A-Z`
echo "experiment run is ${envir} ${envir1}"

set -x
TODAY=`date +%Y%m%d`

#
# Find EXP Name if envir="EXP"_bc
#
if [[ "${envir}" == *"_bc"* ]]; then
    length=${#envir}
    cutlim=$(expr ${length} - 3)
    EXP=`echo ${envir} | cut -c1-${cutlim}`
    Bias_Corr='_bc'
else
    EXP=${envir}
    Bias_Corr=''
fi

caseid="_test"
export cycle=t00z
export UTILHOME=/apps/ops/prod/nco/core/prod_util.v2.0.13
export utilscript=${UTILHOME}/ush
export utilexec=${UTILHOME}/exec
export EXECutil=${UTILHOME}/exec

## This is for near-realtime
##  sh $utilscript/setup.sh
##  sh $utilscript/setpdy.sh
##  . $MET_PLUS_TMP/PDY

export DATE=xxDATE
export DATEp1=xxDATEp1
export MET_PLUS=xxBASE
export MET_PLUS_CONF=${MET_PLUS}/parm/use_cases/perry
export MET_PLUS_CONF2=${MET_PLUS}/parm/met_config
# export MET_PLUS_OUT=/lfs/h2/emc/physics/noscrub/${USER}/metplus_aq${caseid}
# export MET_PLUS_STD=/lfs/h2/emc/ptmp/${USER}/metplus_aq${caseid}/${envir}/${DATE}
export MET_PLUS_OUT=/lfs/h2/emc/physics/noscrub/${USER}/metplus_aq
export MET_PLUS_STD=/lfs/h2/emc/ptmp/${USER}/metplus_aq/${envir}/${DATE}

#
# Creat a more distinct temporary directory to store temporary config files for specific model/date/type
# If both near-real-time and retro run share the same directory, the config files generated for one run
# can be deleted (for commands below) when another one is activated
#
# export MET_PLUS_TMP=/lfs/h2/emc/ptmp/${USER}/metplus_aq${caseid}/${envir}/${DATE}
export MET_PLUS_TMP=/lfs/h2/emc/ptmp/${USER}/metplus_aq/${envir}/${DATE}

rm -f -r ${MET_PLUS_TMP}
mkdir -p ${MET_PLUS_TMP}
###############################################################################################
## Define FCST and OBS input location depend on the case of near-real-time or retrospective run
## METplus will use FCST_INPUT_SELECT and OBS_INPUT_SELECT
## Assign AQM output directory for various exp, PROD, PARA6D,...or I143_a
###############################################################################################
## EXP model output directory, the default is /lfs/h1/ops/prod/com/aqm/v6.1
## Define FCST_INPUT_COMOUT for AQM model output
##
## export FCST_INPUT_NCO=/lfs/h1/ops/prod/com/aqm/v6.1
## export FCST_INPUT_USER=/lfs/h2/emc/physics/noscrub/${USER}/verification/aqm/${EXP}
## 
export FCST_INPUT_SELECT=xxFCST_INPUT

## EXP Obs input directory, the default is /lfs/h1/ops/prod/com/obsproc/v1.1
## Define OBS_INPUT_SELECT for EPA bufr --> obsproc --> prepbufpr  location
## 
## 
## export OBS_INPUT_NCO=/lfs/h1/ops/prod/com/obsproc/v1.1                        avail after 21Z
## export OBS_INPUT_USER=/lfs/h2/emc/physics/noscrub/Perry.Shafran/com/hourly/prod
## export OBS_INPUT_USER=/lfs/h2/emc/physics/noscrub/${USER}/com/hourly/prod  avail after 22Z
## 
export OBS_INPUT_SELECT=xxOBS_INPUT

mkdir -p ${MET_PLUS_OUT} ${MET_PLUS_STD}
#
# For consistent flexible MET_PLUS_OUT.  It is because ${MET_PLUS_CONF}/system_aq.conf
# is the last configure files when executing run_metplus.py.  The hardwire setting of OUTPUT_BASE 
# will overwrite the flexible MET_PLUS_OUT defined in user script.  Now use the
# ${MET_PLUS_CONF}/system_aq.conf
#
cd ${MET_PLUS_TMP}
#
# Define high priority enviironment variable used in the METplus
# to overwrite any prior setting in ~/parm/use_cases/perry 
# and /parm/met_config
cat << EOF > user_priority.conf
[config]
PB2NC_SKIP_IF_OUTPUT_EXISTS=False
[dir]
OUTPUT_BASE = ${MET_PLUS_OUT}
PROJ_DIR = ${MET_PLUS}/output
METPLUS_BASE = ${MET_PLUS}
CONFIG_DIR = ${MET_PLUS_CONF2}
EOF

## LEAD_SEQ_MAX = 72
cat << EOF > shared.conf_aq
[config]
VALID_BEG = ${DATE}01
VALID_END = ${DATEp1}00
## ED's seeting
## VALID_BEG = ${DATE}00
## VALID_END = ${DATE}23

OBS_WINDOW_BEGIN = -86400
OBS_WINDOW_END = 86400

VALID_INCREMENT = 1H
INIT_SEQ = 6, 12
LEAD_SEQ_MIN = 1
LEAD_SEQ_MAX = 72
EOF

model=aq
model1=`echo ${model} | tr a-z A-Z`
echo ${model1}

## FCST_POINT_STAT_INPUT_TEMPLATE = {init?fmt=%Y%m%d%H}/postprd/rrfs.t{init?fmt=%2H}z.natlevf{lead?fmt=%3H}.tm00.grib2
## OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.aqm.{valid?fmt=%Y%m%d%H}.nc
## PB2NC_OUTPUT_TEMPLATE  = prepbufr.aqm.{valid?fmt=%Y%m%d%H}.nc
## OUTPUT_BASE = ${MET_PLUS_OUT}
cat << EOF > ${model}.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
FCST_POINT_STAT_INPUT_DIR = ${FCST_INPUT_SELECT}
OBS_POINT_STAT_INPUT_DIR = {OUTPUT_BASE}/aqm/conus_sfc/${envir}/${model}
PB2NC_INPUT_DIR = ${OBS_INPUT_SELECT}
PB2NC_OUTPUT_DIR = {OBS_POINT_STAT_INPUT_DIR}
POINT_STAT_OUTPUT_DIR = {OUTPUT_BASE}/aqm/stat/${model}
[config]
PB2NC_OBS_BUFR_VAR_LIST= COPO
METPLUS_CONF = {OUTPUT_BASE}/conf/${envir}/${model}/metplus_final_pb2nc_pointstat.conf
POINT_STAT_CONFIG_FILE ={PARM_BASE}/met_config/PointStatConfig_AIRNOW
# LEAD_SEQ = begin_end_incr(1,72,1)
MODEL = ${envir1}
FCST_VAR1_NAME = OZCON
FCST_VAR1_LEVELS = A1
FCST_VAR1_OPTIONS = set_attr_name = "OZCON1";
OBS_VAR1_NAME= COPO
OBS_VAR1_LEVELS= A1
OBS_VAR1_OPTIONS =  convert(x) = x * 10^9;
FCST_VAR2_NAME = OZCON
FCST_VAR2_LEVELS = A8
FCST_VAR2_OPTIONS = set_attr_name = "OZCON8";
OBS_VAR2_NAME= COPO
OBS_VAR2_LEVELS= A8
OBS_VAR2_OPTIONS =  convert(x) = x * 10^9;
[filename_templates]
FCST_POINT_STAT_INPUT_TEMPLATE = cs.{init?fmt=%Y%m%d}/aqm.t{init?fmt=%2H}z.awpozcon${Bias_Corr}.f{lead?fmt=%2H}.148.grib2
OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.aqm.${DATE}.nc
POINT_STAT_OUTPUT_TEMPLATE = ${envir}
PB2NC_INPUT_TEMPLATE = hourly.{da_init?fmt=%Y%m%d}/aqm.t12z.prepbufr.tm00
PB2NC_OUTPUT_TEMPLATE = prepbufr.aqm.${DATE}.nc
EOF

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS}/parm/use_cases/grid_to_obs/grid_to_obs.conf -c ${MET_PLUS}/parm/use_cases/grid_to_obs/examples/conus_surface.conf -c ${MET_PLUS_CONF}/pb2nc_aq.conf -c ${MET_PLUS_CONF}/point_stat_aq.conf -c ${MET_PLUS_TMP}/${model}.conf -c ${MET_PLUS_CONF}/shared.conf -c ${MET_PLUS_TMP}/shared.conf_aq -c ${MET_PLUS_CONF}/system_aq.conf -c ${MET_PLUS_TMP}/user_priority.conf

cat << EOF > statanalysis.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/aqm
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/aqm/stat/${model}/${envir}/*{VALID_BEG}*
[config]
VALID_BEG = ${DATE}
VALID_END = ${DATE}
MODEL = ${envir}
MODEL1 = ${envir1}
[filename_templates]
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid_beg?fmt=%Y%m%d}/{MODEL1}_${model1}_{valid_beg?fmt=%Y%m%d}.stat
EOF

## ${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_aq.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByHour_aq.conf -c ${MET_PLUS_TMP}/statanalysis.conf
${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_aq.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByDay_aq.conf -c ${MET_PLUS_TMP}/statanalysis.conf -c ${MET_PLUS_TMP}/user_priority.conf

model=pm
model1=`echo ${model} | tr a-z A-Z`
echo ${model1}

## FCST_POINT_STAT_INPUT_TEMPLATE = {init?fmt=%Y%m%d%H}/postprd/rrfs.t{init?fmt=%2H}z.natlevf{lead?fmt=%3H}.tm00.grib2
cat << EOF > ${model}.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
FCST_POINT_STAT_INPUT_DIR = ${FCST_INPUT_SELECT}
OBS_POINT_STAT_INPUT_DIR = {OUTPUT_BASE}/aqm/conus_sfc/${envir}/${model}
PB2NC_INPUT_DIR = ${OBS_INPUT_SELECT}
PB2NC_OUTPUT_DIR = {OBS_POINT_STAT_INPUT_DIR}
POINT_STAT_OUTPUT_DIR = {OUTPUT_BASE}/aqm/stat/${model}
[config]
PB2NC_OBS_BUFR_VAR_LIST= COPOPM
METPLUS_CONF = {OUTPUT_BASE}/conf/${envir}/${model}/metplus_final_pb2nc_pointstat.conf
POINT_STAT_CONFIG_FILE ={PARM_BASE}/met_config/PointStatConfig_ANOWPM
## LEAD_SEQ = begin_end_incr(1,72,1)
FCST_VAR1_NAME = PMTF
FCST_VAR1_LEVELS = L1
OBS_VAR1_NAME= COPOPM
OBS_VAR1_LEVELS= A1
OBS_VAR1_OPTIONS =  convert(x) = x * 10^9;
MODEL = ${envir1}
[filename_templates]
FCST_POINT_STAT_INPUT_TEMPLATE = cs.{init?fmt=%Y%m%d}/aqm.t{init?fmt=%2H}z.pm25${Bias_Corr}.f{lead?fmt=%2H}.148.grib2
OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.pm.${DATE}.nc
POINT_STAT_OUTPUT_TEMPLATE = ${envir}
PB2NC_INPUT_TEMPLATE = hourly.{da_init?fmt=%Y%m%d?shift=86400}/aqm.t12z.anowpm.pb.tm024
PB2NC_OUTPUT_TEMPLATE = prepbufr.pm.${DATE}.nc
EOF

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS}/parm/use_cases/grid_to_obs/grid_to_obs.conf -c ${MET_PLUS}/parm/use_cases/grid_to_obs/examples/conus_surface.conf -c ${MET_PLUS_CONF}/pb2nc_aq.conf -c ${MET_PLUS_CONF}/point_stat_aq.conf -c ${MET_PLUS_TMP}/${model}.conf -c ${MET_PLUS_CONF}/shared.conf -c ${MET_PLUS_TMP}/shared.conf_aq -c ${MET_PLUS_CONF}/system_aq.conf -c ${MET_PLUS_TMP}/user_priority.conf

## in ${MET_PLUS_CONF}/StatAnalysis_gatherByDay_aq.conf
## STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/{MODEL}
cat << EOF > statanalysis.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/aqm
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/aqm/stat/${model}/${envir}/*{VALID_BEG}*
[config]
VALID_BEG = ${DATE}
VALID_END = ${DATE}
MODEL = ${envir}
MODEL1 = ${envir1}
[filename_templates]
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid_beg?fmt=%Y%m%d}/{MODEL1}_${model1}_{valid_beg?fmt=%Y%m%d}.stat
EOF

## ${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_aq.conf ${MET_PLUS_CONF}/StatAnalysis_gatherByHour_aq.conf ${MET_PLUS_TMP}/statanalysis.conf
${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_aq.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByDay_aq.conf -c ${MET_PLUS_TMP}/statanalysis.conf -c ${MET_PLUS_TMP}/user_priority.conf

## Define LOG_DIR using MET_PLUS_TMP, thus avodiing moving logs file
## mv ${MET_PLUS_OUT}/logs/master_metplus.log.${TODAY}* ${MET_PLUS_TMP}
## mv ${MET_PLUS_OUT}/logs/${envir}/${DATE}/master_metplus.statanalysis.log.${TODAY}* ${MET_PLUS_TMP}

exit
