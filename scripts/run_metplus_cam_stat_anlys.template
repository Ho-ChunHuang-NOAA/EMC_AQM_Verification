#!/bin/bash
#PBS -N xxJOB
#PBS -o xxOUTLOG
#PBS -e xxERRLOG
#PBS -q dev
#PBS -A AQM-DEV
#PBS -l place=shared,select=1:ncpus=1:mem=4GB
#PBS -l walltime=01:00:00
#PBS -l debug=true
# 

module purge
export HPC_OPT=/apps/ops/para/libs
module use /apps/ops/para/libs/modulefiles/compiler/intel/19.1.3.304/
module load intel
module load gsl
module load python/3.8.6
module load netcdf/4.7.4
module load met/10.1.1
module load metplus/4.1.1
export MET_BASE=/apps/ops/para/libs/intel/19.1.3.304/met/10.1.1/share/met
export MET_ROOT=/apps/ops/para/libs/intel/19.1.3.304/met/10.1.1
export PATH=/apps/ops/para/libs/intel/19.1.3.304/met/10.1.1/bin:${PATH}

module load prod_util/2.0.13
module load prod_envir/2.0.6

#
# This template is for multiple days point-stat verification.  Mainly for restrospective
# StatAnalysis can be run after all Point_Stat are finsihed for each days. Otherwise, 00z staistic may be missing.
#
envir=xxENVIR
envir1=`echo ${envir} | tr a-z A-Z`
echo "experiment run is ${envir} ${envir1}"

export model=cam
model1=`echo $model | tr a-z A-Z`
echo $model1

set -x
TODAY=`date +%Y%m%d`

EXP=${envir}

export cycle=t00z
export UTILHOME=/apps/ops/prod/nco/core/prod_util.v2.0.13
export utilscript=${UTILHOME}/ush
export utilexec=${UTILHOME}/exec
export EXECutil=${UTILHOME}/exec

export DATE=xxDATE
export MET_PLUS=xxBASE
export MET_PLUS_CONF=${MET_PLUS}/parm/use_cases/perry
export MET_PLUS_CONF2=${MET_PLUS}/parm/met_config
export MET_PLUS_OUT=/lfs/h2/emc/physics/noscrub/${USER}/metplus_cam
export MET_PLUS_STD=/lfs/h2/emc/ptmp/${USER}/metplus_cam/${envir}/${DATE}

#
# Creat a more distinct temporary directory to store temporary config files for specific model/date/type
# If both near-real-time and retro run share the same directory, the config files generated for one run
# can be deleted (for commands below) when another one is activated
#
export MET_PLUS_TMP=/lfs/h2/emc/ptmp/${USER}/metplus_cam/${envir}/${DATE}

rm -f -r $MET_PLUS_TMP
mkdir -p $MET_PLUS_TMP

mkdir -p ${MET_PLUS_OUT} ${MET_PLUS_STD}
#
# For consistent flexible MET_PLUS_OUT.  It is because ${MET_PLUS_CONF}/system_aq.conf
# is the last configure files when executing run_metplus.py.  The hardwire setting of OUTPUT_BASE 
# will overwrite the flexible MET_PLUS_OUT defined in user script.  Now use the
# ${MET_PLUS_CONF}/system_aq.conf
#
cd ${MET_PLUS_TMP}

#
# Define high priority enviironment variable used in the METplus
# to overwrite any prior setting in ~/parm/use_cases/perry
# and /parm/met_config
#
cat << EOF > user_priority.conf
[config]
PB2NC_SKIP_IF_OUTPUT_EXISTS=true
[dir]
OUTPUT_BASE = ${MET_PLUS_OUT}
PROJ_DIR = ${MET_PLUS}/output
METPLUS_BASE = ${MET_PLUS}
CONFIG_DIR = ${MET_PLUS_CONF2}
EOF

cat << EOF > statanalysis.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/cam
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/cam/stat/${envir}/*{VALID_BEG}*
[config]
VALID_BEG = ${DATE}
VALID_END = ${DATE}
MODEL = ${envir}
MODEL1 = ${envir1}
[filename_templates]
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid_beg?fmt=%Y%m%d}/{MODEL1}_${model1}_{valid_beg?fmt=%Y%m%d}.stat
EOF

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_cam.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByDay.conf -c ${MET_PLUS_TMP}/statanalysis.conf -c ${MET_PLUS_TMP}/user_priority.conf

exit
