#!/bin/bash
#BSUB -J xxJOB
#BSUB -o xxOUTLOG
#BSUB -e xxERRLOG
#BSUB -q "dev2"
#BSUB -P CMAQ-T2O
#BSUB -R "rusage[mem=3000]"
#BSUB -n 1
#BSUB -W 04:00
#BSUB -R affinity[core(1)]

module use /gpfs/dell2/emc/verification/noscrub/emc.metplus/modulefiles
module load met/10.0.1
module load metplus/4.0.0
module load python/3.6.3
module load NetCDF/4.5.0

#
# This template is for multiple days point-stat verification.  Mainly for restrospective
# StatAnalysis can be run after all Point_Stat are finsihed for each days. Otherwise, 00z staistic may be missing.
#
envir=xxENVIR
envir1=`echo ${envir} | tr a-z A-Z`
echo "experiment run is ${envir} ${envir1}"

export model=cam
model1=`echo $model | tr a-z A-Z`
echo $model1

set -x
TODAY=`date +%Y%m%d`

EXP=${envir}

export cycle=t00z
export UTILHOME=/gpfs/dell1/nco/ops/nwprod/prod_util.v1.1.2
export utilscript=${UTILHOME}/ush
export utilexec=${UTILHOME}/exec
export EXECutil=${UTILHOME}/exec

export DATE=xxDATE
export MET_PLUS=xxBASE
export MET_PLUS_CONF=${MET_PLUS}/parm/use_cases/perry
export MET_PLUS_CONF2=${MET_PLUS}/parm/met_config
export MET_PLUS_OUT=/gpfs/dell2/emc/verification/noscrub/${USER}/metplus_cam
export MET_PLUS_STD=/gpfs/dell2/ptmp/${USER}/metplus_cam/${envir}/${DATE}

#
# Creat a more distinct temporary directory to store temporary config files for specific model/date/type
# If both near-real-time and retro run share the same directory, the config files generated for one run
# can be deleted (for commands below) when another one is activated
#
export MET_PLUS_TMP=/gpfs/dell2/ptmp/${USER}/metplus_cam/${envir}/${DATE}

rm -f -r $MET_PLUS_TMP
mkdir -p $MET_PLUS_TMP

###############################################################################################
## Define FCST and OBS input location depend on the case of near-real-time or retrospective run
## METplus will use FCST_INPUT_SELECT and OBS_INPUT_SELECT
## Assign AQM output directory for various exp, PROD, PARA6D,...or I143_a
###############################################################################################
## EXP model output directory, the default is /gpfs/hps/nco/ops/com/aqm/prod
## Define FCST_INPUT_COMOUT for AQM model output
##
## export FCST_INPUT_NCO=/gpfs/hps/nco/ops/com/aqm/prod
## export FCST_INPUT_USER=/gpfs/dell2/emc/modeling/noscrub/${USER}/verification/aqm/${EXP}
## 
export FCST_INPUT_SELECT=xxFCST_INPUT

## EXP Obs input directory, the default is /gpfs/dell1/nco/ops/com/hourly/prod
## Define OBS_INPUT_SELECT for EPA bufr --> obsproc --> prepbufpr  location
## 
## 
## export OBS_INPUT_NCO=/gpfs/dell1/nco/ops/com/hourly/prod                        avail after 21Z
## export OBS_INPUT_USER=/gpfs/dell2/emc/verification/noscrub/Perry.Shafran/com/hourly/prod
## export OBS_INPUT_USER=/gpfs/dell2/emc/modeling/noscrub/${USER}/com/hourly/prod  avail after 22Z
## 
export OBS_INPUT_SELECT=xxOBS_INPUT

mkdir -p ${MET_PLUS_OUT} ${MET_PLUS_STD}
#
# For consistent flexible MET_PLUS_OUT.  It is because ${MET_PLUS_CONF}/system_aq.conf
# is the last configure files when executing run_metplus.py.  The hardwire setting of OUTPUT_BASE 
# will overwrite the flexible MET_PLUS_OUT defined in user script.  Now use the
# ${MET_PLUS_CONF}/system_aq.conf
#
cd ${MET_PLUS_TMP}

## export model=${envir}
## export model=nam
## model1=`echo $model | tr a-z A-Z`
## echo $model1

#
# Define high priority enviironment variable used in the METplus
# to overwrite any prior setting in ~/parm/use_cases/perry
# and /parm/met_config
#
cat << EOF > user_priority.conf
[config]
PB2NC_SKIP_IF_OUTPUT_EXISTS=true
[dir]
OUTPUT_BASE = ${MET_PLUS_OUT}
PROJ_DIR = ${MET_PLUS}/output
METPLUS_BASE = ${MET_PLUS}
CONFIG_DIR = ${MET_PLUS_CONF2}
EOF

cat << EOF > shared_${model}.conf
[config]
VALID_BEG = ${DATE}00
VALID_END = ${DATE}23
EOF

#
## FCST_POINT_STAT_INPUT_DIR = /gpfs/dell1/nco/ops/com/nam/prod
## MODEL = ${model1}
## OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.nam.{valid?fmt=%Y%m%d%H}.nc
#

cat << EOF > statanalysis.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/cam
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/cam/stat/${envir}/*{VALID_BEG}*
[config]
VALID_BEG = ${DATE}
VALID_END = ${DATE}
MODEL = ${envir}
MODEL1 = ${envir1}
[filename_templates]
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid_beg?fmt=%Y%m%d}/{MODEL1}_${model1}_{valid_beg?fmt=%Y%m%d}.stat
EOF

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_cam.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByDay.conf -c ${MET_PLUS_TMP}/statanalysis.conf -c ${MET_PLUS_TMP}/user_priority.conf

exit
