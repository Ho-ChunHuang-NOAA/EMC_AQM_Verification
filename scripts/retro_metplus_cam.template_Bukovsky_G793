#!/bin/bash
#PBS -N xxJOB
#PBS -o xxOUTLOG
#PBS -e xxERRLOG
#PBS -q dev
#PBS -A AQM-DEV
#PBS -l place=shared,select=1:ncpus=1:mem=4500MB
#PBS -l walltime=02:00:00
#PBS -l debug=true
# 

module purge
export HPC_OPT=/apps/ops/para/libs
module use /apps/ops/para/libs/modulefiles/compiler/intel/19.1.3.304/
module load intel
module load gsl
module load python/3.8.6
module load netcdf/4.7.4
module load met/10.1.2
module load metplus/4.1.4
## export MET_BASE=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2/share/met
## export MET_ROOT=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2
## export PATH=/apps/ops/para/libs/intel-19.1.3.304/met/10.1.2/bin:${PATH}

module load prod_util/2.0.13
module load prod_envir/2.0.6

#
# This template is for multiple days point-stat verification.  Mainly for restrospective
# StatAnalysis can be run after all Point_Stat are finsihed for each days. Otherwise, 00z staistic may be missing.
#
envir=xxENVIR
envir1=`echo ${envir} | tr a-z A-Z`
echo "experiment run is ${envir} ${envir1}"

export model=cam
model1=`echo $model | tr a-z A-Z`
echo $model1

set -x
TODAY=`date +%Y%m%d`

EXP=${envir}

export cycle=t00z
export UTILHOME=/apps/ops/prod/nco/core/prod_util.v2.0.13
export utilscript=${UTILHOME}/ush
export utilexec=${UTILHOME}/exec
export EXECutil=${UTILHOME}/exec

export DATE=xxDATE
export MET_PLUS=xxBASE
export MET_PLUS_CONF=${MET_PLUS}/parm/use_cases/perry
export MET_PLUS_CONF2=${MET_PLUS}/parm/met_config
export MET_PLUS_OUT=/lfs/h2/emc/physics/noscrub/${USER}/metplus_cam
export MET_PLUS_STD=/lfs/h2/emc/ptmp/${USER}/metplus_cam/${envir}/${DATE}
## export MET_PLUS_OUT=/lfs/h2/emc/physics/noscrub/${USER}/metplus_cam_test
## export MET_PLUS_STD=/lfs/h2/emc/ptmp/${USER}/metplus_cam_test/${envir}/${DATE}

#
# Creat a more distinct temporary directory to store temporary config files for specific model/date/type
# If both near-real-time and retro run share the same directory, the config files generated for one run
# can be deleted (for commands below) when another one is activated
#
export MET_PLUS_TMP=/lfs/h2/emc/ptmp/${USER}/metplus_cam/${envir}/${DATE}
## export MET_PLUS_TMP=/lfs/h2/emc/ptmp/${USER}/metplus_cam_test/${envir}/${DATE}

rm -f -r $MET_PLUS_TMP
mkdir -p $MET_PLUS_TMP

###############################################################################################
## Define FCST and OBS input location depend on the case of near-real-time or retrospective run
## METplus will use FCST_INPUT_SELECT and OBS_INPUT_SELECT
## Assign AQM output directory for various exp, PROD, PARA6D,...or I143_a
###############################################################################################
## EXP model output directory, the default is /lfs/h1/ops/prod/com/aqm/v6.1
## Define FCST_INPUT_COMOUT for AQM model output
##
## export FCST_INPUT_NCO=/lfs/h1/ops/prod/com/aqm/v6.1
## export FCST_INPUT_USER=/lfs/h2/emc/physics/noscrub/${USER}/verification/aqm/${EXP}
## 
export FCST_INPUT_SELECT=xxFCST_INPUT

## EXP Obs input directory, the default is /lfs/h1/ops/prod/com/obsproc/v1.1
## Define OBS_INPUT_SELECT for EPA bufr --> obsproc --> prepbufpr  location
## 
## 
## export OBS_INPUT_NCO=/lfs/h1/ops/prod/com/obsproc/v1.1                        avail after 21Z
## export OBS_INPUT_USER=/lfs/h2/emc/physics/noscrub/Perry.Shafran/com/hourly/prod
## export OBS_INPUT_USER=/lfs/h2/emc/physics/noscrub/${USER}/com/hourly/prod  avail after 22Z
## 
export OBS_INPUT_SELECT=xxOBS_INPUT

mkdir -p ${MET_PLUS_OUT} ${MET_PLUS_STD}
#
# For consistent flexible MET_PLUS_OUT.  It is because ${MET_PLUS_CONF}/system_aq.conf
# is the last configure files when executing run_metplus.py.  The hardwire setting of OUTPUT_BASE 
# will overwrite the flexible MET_PLUS_OUT defined in user script.  Now use the
# ${MET_PLUS_CONF}/system_aq.conf
#
cd ${MET_PLUS_TMP}

## export model=${envir}
## export model=nam
## model1=`echo $model | tr a-z A-Z`
## echo $model1

#
# Define high priority enviironment variable used in the METplus
# to overwrite any prior setting in ~/parm/use_cases/perry
# and /parm/met_config
#
cat << EOF > user_priority.conf
[config]
PB2NC_SKIP_IF_OUTPUT_EXISTS=true
[dir]
OUTPUT_BASE = ${MET_PLUS_OUT}
PROJ_DIR = ${MET_PLUS}/output
METPLUS_BASE = ${MET_PLUS}
CONFIG_DIR = ${MET_PLUS_CONF2}
EOF

cat << EOF > shared_${model}.conf
[config]
VALID_BEG = ${DATE}00
VALID_END = ${DATE}23
EOF

#
# Inline-CMAQ all. fcst_var = "SPFH" (2m/10m[kg/kg]), "TMP"(2m[K]), "HGT"(sfc), "UGRD"(10m), "VGRD"(10m), "RH" (2m[%]), "CAPE" (sfc[J/kg]), "HPBL" (sfc[m]),
#                           "PRMSL"(MSL[Pa]), "DPT"(2m[K}), "PWO", "TCDC"(hybrid level[%]), "VIS"(sfc[m]), "CEILING", "GUST"i(sfc[m/s])
# 
# PB2NC sample :  obs_var = "SPFH"[KG/KG], "TMP"[K], "HGT"[m], "UGRD"[m/s], "VGRD"[m/s], "RH", "CAPE", "PBL",
#                           "PRMSL"[PA], "DPT"[K], "PWO"[KG/M**2or mm], "TCDC"[%], "VIS"[m], "CEILING"[m], "GUST"[m/s] 
# PWO : TOTAL PRECIPITABLE WATER
# CELING : HGT OF CLOUD BASE
#
# Switch to use prolevf because the pb2nc and point_stat both look for pressure quantities
# BOTH_VAR1_LEVELS = Z2, P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100, P50
#
## FCST_POINT_STAT_INPUT_DIR = /lfs/h1/ops/prod/com/obsproc/v1.1
## MODEL = ${model1}
## OBS_POINT_STAT_INPUT_TEMPLATE = prepbufr.nam.{valid?fmt=%Y%m%d%H}.nc

cat << EOF > ${model}.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
FCST_POINT_STAT_INPUT_DIR = ${FCST_INPUT_SELECT}
OBS_POINT_STAT_INPUT_DIR = {OUTPUT_BASE}/cam/conus_cam
PB2NC_INPUT_DIR = ${OBS_INPUT_SELECT}
[config]
POINT_STAT_CONFIG_FILE ={PARM_BASE}/met_config/PointStatConfig_cam_Bukovsky_G793
METPLUS_CONF = {OUTPUT_BASE}/conf/${model}/metplus_final_pb2nc_pointstat.conf
LEAD_SEQ = begin_end_incr(0,72,1)
BOTH_VAR8_OPTIONS = GRIB_lvl_typ = 1; censor_thresh = gt16090; censor_val = 16090; desc = "EMC";
FCST_VAR16_NAME = VIS
FCST_VAR16_LEVELS = L0
FCST_VAR16_THRESH =  <805, <1609, <4828, <8045 ,>=8045, <16090
FCST_VAR16_OPTIONS = GRIB_lvl_typ = 3; desc = "GSL"; censor_thresh = gt16090; censor_val = 16090;
OBS_VAR16_NAME = VIS
OBS_VAR16_LEVELS = L0
OBS_VAR16_THRESH =  <805, <1609, <4828, <8045 ,>=8045, <16090
OBS_VAR16_OPTIONS = censor_thresh = gt16090; censor_val = 16090; desc = "GSL";
MODEL = ${envir1}
[filename_templates]
FCST_POINT_STAT_INPUT_TEMPLATE = aqm.{init?fmt=%Y%m%d}/postprd/aqm.t{init?fmt=%2H}z.all.f{lead?fmt=%3H}.793.grib2
PB2NC_INPUT_TEMPLATE =  nam.{da_init?fmt=%Y%m%d}/nam.t{cycle?fmt=%2H}z.prepbufr.tm{offset?fmt=%2H}.nr
POINT_STAT_OUTPUT_TEMPLATE = ${envir}
EOF

#model1=`echo $model | tr a-z A-Z`
#echo $model1

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS}/parm/use_cases/grid_to_obs/grid_to_obs.conf -c ${MET_PLUS}/parm/use_cases/grid_to_obs/examples/conus_surface.conf -c ${MET_PLUS_CONF}/pb2nc_cam.conf -c ${MET_PLUS_CONF}/point_stat_cam.conf -c ${MET_PLUS_TMP}/${model}.conf -c ${MET_PLUS_CONF}/shared.conf -c ${MET_PLUS_TMP}/shared_${model}.conf -c ${MET_PLUS_CONF}/system_cam.conf -c ${MET_PLUS_TMP}/user_priority.conf

## mkdir -p ${MET_PLUS_STD}/stat/${model}
## cp ${MET_PLUS_OUT}/cam/stat/${model}/*${TODAY}* ${MET_PLUS_STD}/stat/${model}
## mv ${MET_PLUS_OUT}/logs/master_metplus.log.${TODAY} ${MET_PLUS_TMP}/master_metplus.log.${TODAY}_${model}

cat << EOF > statanalysis.conf
[dir]
LOG_DIR = ${MET_PLUS_TMP}/logs
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/stat/cam
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/cam/stat/${envir}/*{VALID_BEG}*
[config]
VALID_BEG = ${DATE}
VALID_END = ${DATE}
MODEL = ${envir}
MODEL1 = ${envir1}
[filename_templates]
STAT_ANALYSIS_DUMP_ROW_TEMPLATE =  {valid_beg?fmt=%Y%m%d}/{MODEL1}_${model1}_{valid_beg?fmt=%Y%m%d}.stat
EOF

${MET_PLUS}/ush/run_metplus.py -c ${MET_PLUS_CONF}/system_cam.conf -c ${MET_PLUS_CONF}/StatAnalysis_gatherByDay.conf -c ${MET_PLUS_TMP}/statanalysis.conf -c ${MET_PLUS_TMP}/user_priority.conf

info_dir=/lfs/h2/emc/ptmp/${USER}/run_status/evs/cam793
if [ ! -d ${info_dir} ]; then mkdir -p ${info_dir}; fi
status_file=${info_dir}/evs_retro_run.status
echo "EVS ${envir} ${DATE}" > ${status_file}
exit
